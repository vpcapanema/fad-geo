#!/usr/bin/env python3
"""
Teste de envio real de email de recupera√ß√£o com a senha de aplicativo
"""

import os
import sys
from pathlib import Path

# Adiciona o diret√≥rio raiz ao Python path
sys.path.append(str(Path(__file__).parent))

from app.services.email_service import email_service

def testar_envio_real():
    """Testa o envio real de email com a senha de aplicativo"""
    print("üìß TESTE DE ENVIO REAL DE EMAIL")
    print("=" * 60)
    
    # Configura√ß√µes atuais
    print("‚öôÔ∏è  CONFIGURA√á√ïES ATUAIS:")
    print(f"   SMTP Server: {email_service.smtp_server}")
    print(f"   SMTP Port: {email_service.smtp_port}")
    print(f"   Username: {email_service.smtp_username}")
    print(f"   From Email: {email_service.from_email}")
    print(f"   Environment: {os.getenv('ENVIRONMENT', 'development')}")
    print()
    
    # Verifica se a senha est√° configurada
    if email_service.smtp_password and email_service.smtp_password != "DESENVOLVIMENTO":
        print("‚úÖ Senha de aplicativo configurada")
    else:
        print("‚ùå Senha de aplicativo n√£o configurada")
        return False
    
    # Testa a conex√£o SMTP
    print("\nüîß TESTANDO CONEX√ÉO SMTP...")
    try:
        if email_service.testar_configuracao():
            print("‚úÖ Conex√£o SMTP funcionando!")
        else:
            print("‚ùå Falha na conex√£o SMTP")
            return False
    except Exception as e:
        print(f"‚ùå Erro na conex√£o: {e}")
        return False
    
    # Testa envio de email real
    print("\nüì§ TESTANDO ENVIO DE EMAIL REAL...")
    try:
        sucesso = email_service.enviar_email_recuperacao_senha(
            destinatario_email="vpcapanema@der.sp.gov.br",
            destinatario_nome="Vinicius do Prado Capanema",
            token_recuperacao="test-token-12345",
            base_url="http://127.0.0.1:8000"
        )
        
        if sucesso:
            print("üéâ EMAIL ENVIADO COM SUCESSO!")
            print("üìß Verifique sua caixa de entrada: vpcapanema@der.sp.gov.br")
            print("üìÇ Se n√£o aparecer na caixa de entrada, verifique a pasta de spam")
            return True
        else:
            print("‚ùå Falha no envio do email")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro no envio: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    print("üöÄ TESTE DE EMAIL REAL - FAD RECUPERA√á√ÉO")
    print("   Com senha de aplicativo: ayfe lzis jjkd pcwv")
    print("   Aplicativo: FAD-SERVIDOR")
    print()
    
    resultado = testar_envio_real()
    
    print("\n" + "=" * 60)
    if resultado:
        print("‚úÖ CONFIGURA√á√ÉO FUNCIONANDO!")
        print("   O sistema agora pode enviar emails reais.")
        print("   Voc√™ pode usar a recupera√ß√£o de senha normalmente.")
    else:
        print("‚ùå PROBLEMA NA CONFIGURA√á√ÉO")
        print("   Verifique os logs acima para identificar o erro.")

if __name__ == "__main__":
    main()
