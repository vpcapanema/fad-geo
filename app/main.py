from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from fastapi.templating import Jinja2Templates

# ðŸ”¥ Importando as rotas corretamente
from app.api.endpoints.upload import router as upload_router
from app.api.endpoints.validacao_geometria import router as validacao_router

app = FastAPI()

# ðŸ”¥ ConfiguraÃ§Ã£o correta do CORS para permitir chamadas do frontend
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # ðŸ”¥ Agora permite chamadas de qualquer origem
    allow_credentials=True,
    allow_methods=["*"],  # ðŸ”¥ Permite todos os mÃ©todos (GET, POST, etc.)
    allow_headers=["*"],  # ðŸ”¥ Permite qualquer cabeÃ§alho
    expose_headers=["*"],  # ðŸ”¥ Garante que os headers sejam expostos corretamente
)

# Servir arquivos estÃ¡ticos
app.mount("/static", StaticFiles(directory="app/static"), name="static")

# ConfiguraÃ§Ã£o do Jinja2
templates = Jinja2Templates(directory="app/templates")

@app.get("/")
async def serve_index(request: Request):
    return templates.TemplateResponse("index.html", {"request": request})

# âœ… Incluindo as rotas corretamente
app.include_router(upload_router, prefix="/upload")
app.include_router(validacao_router, prefix="/geometria")
